{
	"Open Centered Window": {
		"prefix": "js-open-window",
		"description": "Open Centered Window - JS Window",
		"scope": "javascript",
		"body": [
			"function openCenteredWindow({url, width, height}) {",
			"    const pos = {",
			"        x: (screen.width / 2) - (width / 2),",
			"        y: (screen.height/2) - (height / 2)",
			"    };",
			"",
			"    const features = `width=${width} height=${height} left=${pos.x} top=${pos.y}`;",
			"",
			"    accurateAuthorize = window.open(url, '_blank', features);",
			"",
			"    accurateAuthorize.onunload = function(e){",
			"        console.log(accurateAuthorize);",
			"",
			"        if (!accurateAuthorize.closed) {",
			"            let cekClose = setInterval(() => {",
			"                if(accurateAuthorize.closed){",
			"                    clearInterval(cekClose);",
			"                }else{",
			"                    let accurateQuery   = accurateAuthorize.location.hash.substring(1),",
			"                        accurateParams  = new URLSearchParams(accurateQuery);",
			"                    console.log('cek');",
			"                    if (accurateParams.get('access_token')) {",
			"                        $('#import-accurate-online').modal('show');",
			"                        clearInterval(cekClose);",
			"                        accurateAuthorize.close();",
			"                    }",
			"                }",
			"            }, 1000);",
			"        }",
			"    }",
			"",
			"    return accurateAuthorize;",
			"}"
		]
	},
	"Window History PushState - JS Window Location": {
		"prefix": "js-history-pushstate",
		"description": "Change url without reload page - JS Window History",
		"scope": "javascript",
		"body": [
			"window.history.pushState(null, null, window.location.pathname);"
		]
	}
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}